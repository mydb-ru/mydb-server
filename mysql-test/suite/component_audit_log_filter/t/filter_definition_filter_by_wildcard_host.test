--source include/have_ipv6.inc
--source include/have_component_audit_log.inc

--source ../inc/audit_tables_init.inc
--source ../inc/audit_comp_install.inc

--let $user_name = usr
--let $ipv4_localhost = 127.0.0.1
--let $ipv6_localhost = ::1
--let $password = password

--let $MYSQL_PORT = `SELECT @@port`

SET @filter = '{
  "filter": {
    "class": {
      "name": "connection",
      "event": {
        "name": "connect"
      }
    }
  }
}';
SELECT audit_log_filter_set_filter('log_connect', @filter);

--echo ###
--echo ### 1.1 IPv4 and IPv6 users, default audit log rule
--echo ###

eval CREATE USER '$user_name'@'$ipv4_localhost' IDENTIFIED BY '$password';
eval CREATE USER '$user_name'@'$ipv6_localhost' IDENTIFIED BY '$password';

SELECT audit_log_filter_set_user('%', 'log_connect');

SET @audit_filter_log_name = audit_log_rotate();

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 2 AS two_connection_events_must_be_logged`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.user') = '$user_name' AS first_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.ip') = '$ipv4_localhost' AS first_event_must_be_from_ipv4_localhost`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.user') = '$user_name' AS second_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.ip') = '$ipv6_localhost' AS second_event_must_be_from_ipv6_localhost`)


--echo ###
--echo ### 1.2 IPv4 and wildcard users, default audit log rule
--echo ###
eval DROP USER '$user_name'@'$ipv6_localhost';
eval CREATE USER '$user_name'@'%' IDENTIFIED BY '$password';

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 2 AS two_connection_events_must_be_logged`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.user') = '$user_name' AS first_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.ip') = '$ipv4_localhost' AS first_event_must_be_from_ipv4_localhost`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.user') = '$user_name' AS second_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.ip') = '$ipv6_localhost' AS second_event_must_be_from_ipv6_localhost`)


--echo ###
--echo ### 1.3 Only wildcard user, default audit log rule
--echo ###
eval DROP USER '$user_name'@'$ipv4_localhost';

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 2 AS two_connection_events_must_be_logged`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.user') = '$user_name' AS first_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.ip') = '$ipv4_localhost' AS first_event_must_be_from_ipv4_localhost`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.user') = '$user_name' AS second_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.ip') = '$ipv6_localhost' AS second_event_must_be_from_ipv6_localhost`)


--echo ###
--echo ### 2.1 Only wildcard user, IPv4 audit log rule
--echo ###
SELECT audit_log_filter_remove_user('%');
eval SELECT audit_log_filter_set_user('$user_name@$ipv4_localhost', 'log_connect');

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 0 AS no_connection_events_must_be_logged`)


--echo ###
--echo ### 2.2 IPv4 and wildcard users, IPv4 audit log rule
--echo ###
eval CREATE USER '$user_name'@'$ipv4_localhost' IDENTIFIED BY '$password';

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 1 AS one_connection_event_must_be_logged`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.user') = '$user_name' AS event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.ip') = '$ipv4_localhost' AS event_must_be_from_ipv4_localhost`)


--echo ###
--echo ### 2.3 IPv4 and IPv6 users, IPv4 audit log rule
--echo ###
eval DROP USER '$user_name'@'%';
eval CREATE USER '$user_name'@'$ipv6_localhost' IDENTIFIED BY '$password';

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 1 AS one_connection_event_must_be_logged`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.user') = '$user_name' AS event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.ip') = '$ipv4_localhost' AS event_must_be_from_ipv4_localhost`)


--echo ###
--echo ### 3.1 IPv4 and IPv6 users, wildcard audit log rule
--echo ###
eval SELECT audit_log_filter_remove_user('$user_name@$ipv4_localhost');
eval SELECT audit_log_filter_set_user('$user_name@%', 'log_connect');

SET @audit_filter_log_name = audit_log_rotate();

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 0 AS no_connection_events_must_be_logged`)


--echo ###
--echo ### 3.2 IPv4 and wildcard users, wildcard audit log rule
--echo ###
eval DROP USER '$user_name'@'$ipv6_localhost';
eval CREATE USER '$user_name'@'%' IDENTIFIED BY '$password';

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 1 AS one_connection_event_must_be_logged`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.user') = '$user_name' AS event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.ip') = '$ipv6_localhost' AS event_must_be_from_ipv6_localhost`)


--echo ###
--echo ### 3.3 Only wildcard user, wildcard audit log rule
--echo ###
eval DROP USER '$user_name'@'$ipv4_localhost';

--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv4_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
--source include/count_sessions.inc
--exec $MYSQL -u$user_name -p$password -h$ipv6_localhost -P$MYSQL_PORT -e "SELECT USER(), CURRENT_USER();" test
--source include/wait_until_count_sessions.inc
SET @audit_filter_log_name = audit_log_rotate();
SET @content = CAST(CONVERT(LOAD_FILE(CONCAT(@@global.datadir, @audit_filter_log_name)) USING ascii) AS JSON);

--assert(`SELECT JSON_LENGTH(@content) = 2 AS two_connection_events_must_be_logged`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.user') = '$user_name' AS first_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[0].login.ip') = '$ipv4_localhost' AS first_event_must_be_from_ipv4_localhost`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.user') = '$user_name' AS second_event_must_be_from_usr`)
--assert(`SELECT JSON_EXTRACT(@content, '\$[1].login.ip') = '$ipv6_localhost' AS second_event_must_be_from_ipv6_localhost`)

eval SELECT audit_log_filter_remove_user('$user_name@%');

eval DROP USER '$user_name'@'%';

--source ../inc/audit_comp_uninstall.inc
--source ../inc/audit_tables_cleanup.inc
